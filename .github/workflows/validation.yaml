name: Validation CI
on:
  pull_request:
  push:
    branches: [ master ]
  issues:
    types: [ opened ]
  release:
    types: [ created, published ]
  schedule:
    # run every 6 hours at 0352, 0952, 1552, and 2152 UTC
    - cron: '52 3,9,15,21 * * *'
  workflow_dispatch:
env:
  TERM: xterm
jobs:
  changes:
    name: Check for file changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      ci: ${{ steps.filter.outputs.ci }}
      dependencies: ${{ steps.filter.outputs.dependencies }}
      docker: ${{ steps.filter.outputs.docker }}
      markdown: ${{ steps.filter.outputs.markdown }}
      helpers: ${{ steps.filter.outputs.helpers }}
      shell: ${{ steps.filter.outputs.shell }}
      spelling: ${{ steps.filter.outputs.spelling }}
      test: ${{ steps.filter.outputs.test }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          ci:
            - '.github/workflows/*.yaml'
            - '.github/workflows/*.yml'
            - 'resources/config/**'
          dependencies:
            - 'dependencies/**'
          docker:
            - 'docker/Dockerfile*'
          helpers:
            - '.github/scripts/**'
          markdown:
            - '**/*.md'
          shell:
            - 'nodebuilder'
          spelling:
            - 'resources/data/pyspelling.wordlist.txt'
          test:
            - 'test/test_nodebuilder'

  dependencies-check:
    name: Check depencencies
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          config-file: 'resources/config/dependency-review.yaml'
          base-ref: ${{ github.event.pull_request.base.sha || 'master' }}
          head-ref: ${{ github.event.pull_request.head.sha || github.ref }}

  shell-lint:
    name: Lint the shell code
    needs: changes
    if: >-
      ${{ 
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.docker == 'true' ||
        needs.changes.outputs.helpers == 'true' ||
        needs.changes.outputs.shell == 'true' ||
        needs.changes.outputs.test == 'true'
      }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint with shellcheck and shfmt
        uses: luizm/action-sh-checker@v0.8.0
        env:
          SHFMT_OPTS: -i 2 -sr

  yaml-lint:
    name: Lint the yaml code
    needs: changes
    if: >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.docker == 'true' ||
        needs.changes.outputs.shell == 'true' ||
        needs.changes.outputs.test == 'true'
      }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint workflow files
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color -verbose
        shell: bash

  dockerfile-lint:
    name: Lint the Dockerfile code
    needs: changes
    if: >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.docker == 'true'
      }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint Dockerfiles
        uses: luke142367/Docker-Lint-Action@v1.0.0
        with:
          target: docker/Dockerfile*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  markdown-lint:
    name: Lint the markdown formatting
    needs: changes
    if: >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.markdown == 'true'
      }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint markdown
        uses: avto-dev/markdown-lint@v1
        with:
          config: 'resources/config/markdownlint.yaml'
          args: '*/*.md'

  markdown-links:
    name: Check hyperlinks
    needs: changes
    if: >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.markdown == 'true' 
      }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run markdown-link-check on documentation
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          config-file: 'resources/config/markdown-link-check.json' 
          use-verbose-mode: 'yes'

  markdown-spellcheck:
    name: Check spelling
    needs: changes
    if: >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.markdown == 'true' ||
        needs.changes.outputs.spelling == 'true'
      }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rojopolis/spellcheck-github-actions@v0
        name: Spell check markdown files with PySpelling
        with:
          config_path: 'resources/config/spellcheck.yaml'
          output_file: 'spellcheck-output.txt'
      - uses: actions/upload-artifact@v4
        if: '!cancelled()'
        with:
          name: Spellcheck Output
          path: spellcheck-output.txt

  run-nodebuilder-baremetal:
    name: ${{ matrix.job-purpose }} on ${{ matrix.os-friendly-name }}
    needs: [changes, dependencies-check, shell-lint, yaml-lint]
    if: >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.shell == 'true' ||
        needs.changes.outputs.test == 'true'
      }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        job-purpose: [Test-package, Test-source]
        os: [ubuntu-22.04, ubuntu-latest, macos-13, macos-14]
        include:
          - job-purpose: Test-package
            additional-args: ''
          - job-purpose: Test-source
            additional-args: '--compile'
          - os: ubuntu-22.04
            os-friendly-name: Ubuntu 22
            check-environment-command: cat /etc/os-release && lscpu && grep Mem /proc/meminfo
            remove-firefox-command: sudo apt-get remove --assume-yes firefox
            install-upgrades-command: >-
              sleep $(echo "scale=3; $RANDOM / 32768 * 10" | bc)
              && sudo apt-get update --option 'Acquire::Retries=5'
              && sudo NEEDRESTART_MODE=a apt-get dist-upgrade --assume-yes --option 'Acquire::Retries=5'
            cache-path: |
              /var/cache/apt/archives/*.deb
              /var/lib/apt/lists/*.ubuntu.com_ubuntu_dists_*
              /var/lib/apt/lists/download.docker.com_linux_ubuntu_dists_*
              /var/lib/apt/lists/dl.google.com_linux_chrome_deb_dists_*
              /var/lib/apt/lists/packages.microsoft.com_repos_code_dists_*
              /var/lib/apt/lists/pkg.cloudflareclient.com_dists_*
            path-to-bitcoin-log: '/home/runner/.bitcoin/debug.log'
          - os: ubuntu-latest
            os-friendly-name: Ubuntu LTS
            check-environment-command: cat /etc/os-release && lscpu && grep Mem /proc/meminfo
            remove-firefox-command: sudo apt-get remove --assume-yes firefox
            install-upgrades-command: >-
              sleep $(echo "scale=3; $RANDOM / 32768 * 10" | bc)
              && sudo apt-get update --option 'Acquire::Retries=5'
              && sudo NEEDRESTART_MODE=a apt-get dist-upgrade --assume-yes --option 'Acquire::Retries=5'
            cache-path: |
              /var/cache/apt/archives/*.deb
              /var/lib/apt/lists/*.ubuntu.com_ubuntu_dists_*
              /var/lib/apt/lists/download.docker.com_linux_ubuntu_dists_*
              /var/lib/apt/lists/dl.google.com_linux_chrome_deb_dists_*
              /var/lib/apt/lists/packages.microsoft.com_repos_code_dists_*
              /var/lib/apt/lists/pkg.cloudflareclient.com_dists_*
            path-to-bitcoin-log: '/home/runner/.bitcoin/debug.log'
          - os: macos-13
            os-friendly-name: macOS 13
            check-environment-command: sw_vers && sysctl machdep.cpu.core_count machdep.cpu.thread_count machdep.cpu.brand_string && memory_pressure -Q
            path-to-bitcoin-log: '/Users/runner/Library/Application Support/Bitcoin/debug.log'
          - os: macos-14
            os-friendly-name: macOS 14 [arm64]
            check-environment-command: sw_vers && sysctl machdep.cpu.core_count machdep.cpu.thread_count machdep.cpu.brand_string && memory_pressure -Q
            path-to-bitcoin-log: '/Users/runner/Library/Application Support/Bitcoin/debug.log'
    steps:
      - uses: actions/checkout@v4
      - name: Check the current environment
        run: |
          uname -a
          ${{ matrix.check-environment-command }}
          df -h
          date -u
      - name: Change owner of apt archives
        if: contains(matrix.os, 'ubuntu')
        run: sudo chown -R "$(whoami)" /var/cache/apt/archives
      - name: Cache system archives
        if: matrix.cache-path != null
        uses: actions/cache@v4
        with:
          path: ${{ matrix.cache-path }}
          key: cache-updates-${{ matrix.os }}-${{ github.run_id }}
          restore-keys: cache-updates-${{ matrix.os }}
      - name: Remove the snap package
        if: matrix.remove-firefox-command != null
        run: ${{ matrix.remove-firefox-command }}
      - name: Install system upgrades
        if: matrix.install-upgrades-command != null
        run: ${{ matrix.install-upgrades-command }}
      - name: Test the console output ${{ matrix.additional-args }}
        id: test-nodebuilder
        run: /bin/sh -x ./test/test_nodebuilder --ref "${GITHUB_SHA}" ${{ matrix.additional-args }}
        timeout-minutes: 120
        continue-on-error: true
      - name: If test failed, debug nodebuilder ${{ matrix.additional-args }}
        if: steps.test-nodebuilder.outcome == 'failure'
        env:
          CI_NODEBUILDER_URL: https://github.com/bitcoin-tools/nodebuilder/raw/master/nodebuilder
        run: |
          rm /usr/local/bin/*bitcoin*
          wget --no-verbose --retry-connrefused "${CI_NODEBUILDER_URL}"
          chmod u+x nodebuilder
          /bin/sh -x ./nodebuilder ${{ matrix.additional-args }}
        timeout-minutes: 120
      - name: Save Bitcoin Core log as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job-purpose }}-${{ matrix.os }}-bitcoin-debug.log
          path: ${{ matrix.path-to-bitcoin-log }}
      - name: If test failed, fail the job
        if: steps.test-nodebuilder.outcome == 'failure'
        run: printf '%s\n' "Review the step 'Test the console output' above." && exit 1

  run-nodebuilder-docker:
    name: Run container ${{ matrix.container }}
    needs: [changes, dependencies-check, dockerfile-lint, shell-lint, yaml-lint]
    if: >-
      ${{
        needs.changes.outputs.ci == 'true' ||
        needs.changes.outputs.docker == 'true' ||
        needs.changes.outputs.shell == 'true'
      }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: [Alpine, Amazon, Arch, Debian, Fedora, Manjaro, Red Hat, Ubuntu, openSUSE]
        include:
          - container: Alpine
            dockerfile: Dockerfile_alpine
          - container: Amazon
            dockerfile: Dockerfile_amazon
          - container: Arch
            dockerfile: Dockerfile_arch
          - container: Debian
            dockerfile: Dockerfile_debian
          - container: Fedora
            dockerfile: Dockerfile_fedora
          - container: Manjaro
            dockerfile: Dockerfile_manjaro
          - container: Red Hat
            dockerfile: Dockerfile_redhat
          - container: Ubuntu
            dockerfile: Dockerfile
          - container: openSUSE
            dockerfile: Dockerfile_opensuse
    steps:
      - uses: actions/checkout@v4
      - name: Check the current OS version
        run: grep "VERSION\|ID" /etc/os-release && uname -a
      - name: Run the docker image
        timeout-minutes: 120
        uses: docker/build-push-action@v5
        with:
          build-args: NODEBUILDER_VERSION=${{ github.sha || github.head_ref || 'master' }}
          context: .
          file: docker/${{ matrix.dockerfile }}
