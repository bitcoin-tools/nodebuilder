name: Validation CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

env:
  TERM: xterm

jobs:

  bash-lint:
    name: Validate with ShellCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint with shellcheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_names: offloadcoredata usei2p usetor

  bash-format:
    name: Validate with shfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint with shfmt
        uses: luizm/action-sh-checker@master
        env:
          SHFMT_OPTS: -i 2 -sr
        with:
          sh_checker_shellcheck_disable: true
          sh_checker_exclude: offloadcoredata usei2p usetor

  markdown-links:
    name: Validate with markdown-link-check
    runs-on: ubuntu-latest
    needs: [bash-lint, bash-format]
    steps:
      - uses: actions/checkout@v4
      - name: Run markdown-link-check on Documentation
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-verbose-mode: 'yes'

  markdown-spellcheck:
    name: Validate with PySpelling
    runs-on: ubuntu-latest
    needs: [bash-lint, bash-format]
    steps:
      - uses: actions/checkout@v4
      - uses: rojopolis/spellcheck-github-actions@v0
        name: Spell Check Markdown Files
        with:
          output_file: spellcheck-output.txt
      - uses: actions/upload-artifact@v4
        if: '!cancelled()'
        with:
          name: Spellcheck Output
          path: spellcheck-output.txt

  run-nodebuilder-ubuntu:
    name: Run nodebuilder on Ubuntu (latest)
    runs-on: ubuntu-latest
    needs: [bash-lint, bash-format, markdown-links, markdown-spellcheck]
    steps:
      - name: Check the current Ubuntu
        run: grep "^VERSION=" /etc/os-release
      - uses: actions/checkout@v4
      - name: Install system upgrades
        run: sudo apt-get update && sudo NEEDRESTART_MODE=a apt-get dist-upgrade -y
      - name: Install runtime dependency
        run: sudo apt-get update && sudo apt-get install -y libxcb-xinerama0
      - name: Run nodebuilder
        run: timeout 7200 /bin/bash -x ./nodebuilder

  run-nodebuilder-ubuntu-20-04:
    name: Run nodebuilder on Ubuntu (20)
    runs-on: ubuntu-20.04
    needs: [bash-lint, bash-format, markdown-links, markdown-spellcheck]
    steps:
      - name: Check the current Ubuntu
        run: grep "^VERSION=" /etc/os-release
      - uses: actions/checkout@v4
      - name: Install system upgrades
        run: sudo apt-get update && sudo NEEDRESTART_MODE=a apt-get dist-upgrade -y
      - name: Install runtime dependency
        run: sudo apt-get update && sudo apt-get install -y libxcb-xinerama0
      - name: Run nodebuilder
        run: timeout 7200 /bin/bash -x ./nodebuilder

  run-nodebuilder-macos:
    name: Run nodebuilder on macOS (latest)
    runs-on: macos-latest
    needs: [bash-lint, bash-format, markdown-links, markdown-spellcheck]
    steps:
      - name: Check the current macOS version
        run: sw_vers | grep ProductVersion | awk '{printf $2}'
      - uses: actions/checkout@v4
      - name: Install brew package manager
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: Install runtime dependencies
        run: brew install coreutils git libxinerama
      - name: Run nodebuilder
        run: gtimeout 7200 /bin/bash -x ./nodebuilder

  run-nodebuilder-macos-12:
    name: Run nodebuilder on macOS (11)
    runs-on: macos-11
    needs: [bash-lint, bash-format, markdown-links, markdown-spellcheck]
    steps:
      - name: Check the current macOS version
        run: sw_vers | grep ProductVersion | awk '{printf $2}'
      - uses: actions/checkout@v4
      - name: Install brew package manager
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: Install runtime dependencies
        run: brew install coreutils git libxinerama
      - name: Run nodebuilder
        run: gtimeout 7200 /bin/bash -x ./nodebuilder

  run-docker-container:
    name: Run nodebuilder in Docker
    runs-on: ubuntu-latest
    needs: [bash-lint, bash-format, markdown-links, markdown-spellcheck]
    steps:
      - uses: actions/checkout@v4
      - name: Build docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
