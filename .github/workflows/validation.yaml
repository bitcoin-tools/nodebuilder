name: Validation CI
on:
  pull_request:
  push:
    branches: [ master ]
    paths:
      - Dockerfile
      - dependencies.txt
      - nodebuilder
      - test/test_bitcoin
      - .github/workflows/*.yaml
      - dockerfiles/Dockerfile_*
  issues:
    types: [ opened ]
  schedule:
    - cron: '0 10,22 * * *'
  workflow_dispatch:
env:
  TERM: xterm
jobs:
  bash-lint:
    name: Lint the bash
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint with shellcheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_names: offloadcoredata usei2p usetor
      - name: Lint with shfmt
        uses: luizm/action-sh-checker@master
        env:
          SHFMT_OPTS: -i 2 -sr
        with:
          sh_checker_shellcheck_disable: true
          sh_checker_exclude: offloadcoredata usei2p usetor

  yaml-lint:
    name: Lint the yaml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint workflow files
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color -verbose
        shell: bash

  dockerfile-lint:
    name: Lint the Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: lint
        uses: luke142367/Docker-Lint-Action@v1.0.0
        with:
          target: Dockerfile dockerfiles/Dockerfile*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  markdown-links:
    name: Check the links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run markdown-link-check on documentation
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-verbose-mode: 'yes'

  markdown-spellcheck:
    name: Check the spelling
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rojopolis/spellcheck-github-actions@v0
        name: Spell check markdown files with PySpelling
        with:
          config_path: config/.spellcheck.yaml
          output_file: spellcheck-output.txt
      - uses: actions/upload-artifact@v4
        if: '!cancelled()'
        with:
          name: Spellcheck Output
          path: spellcheck-output.txt

  run-nodebuilder-baremetal:
    name: Run on ${{ matrix.friendly-name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-20.04, macos-14, macos-13]
        include:
          - os: ubuntu-latest
            friendly-name: Ubuntu 22
            check-version-command: grep "VERSION\|ID" /etc/os-release && uname -a
            install-upgrades-command: sudo apt-get update && sudo NEEDRESTART_MODE=a apt-get dist-upgrade -y
          - os: ubuntu-20.04
            friendly-name: Ubuntu 20
            check-version-command: grep "VERSION\|ID" /etc/os-release && uname -a
            install-upgrades-command: sudo apt-get update && sudo NEEDRESTART_MODE=a apt-get dist-upgrade -y
          - os: macos-14
            friendly-name: macOS 14 arm64
            check-version-command: sw_vers | grep Version | awk '{print $2}' && uname -a
          - os: macos-13
            friendly-name: macOS 13 x86_64
            check-version-command: sw_vers | grep Version | awk '{print $2}' && uname -a
    needs: [bash-lint, yaml-lint, dockerfile-lint, markdown-spellcheck]
    steps:
      - name: Check the current OS version
        run: ${{ matrix.check-version-command }}
      - uses: actions/checkout@v4
      - name: Install system upgrades
        run: ${{ matrix.install-upgrades-command }}
        if: matrix.install-upgrades-command != null
      - name: Run nodebuilder
        timeout-minutes: 120
        run: /bin/bash -x ./nodebuilder

  run-nodebuilder-docker:
    name: Run in ${{ matrix.container }} container
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: [Alpine, Fedora, Manjaro, Ubuntu]
        include:
          - container: Alpine
            dockerfile: ./dockerfiles/Dockerfile_alpine
          - container: Arch
            dockerfile: ./dockerfiles/Dockerfile_arch
          - container: Debian
            dockerfile: ./dockerfiles/Dockerfile_debian
          - container: Fedora
            dockerfile: ./dockerfiles/Dockerfile_fedora
          - container: Manjaro
            dockerfile: ./dockerfiles/Dockerfile_manjaro
          - container: Ubuntu
            dockerfile: ./Dockerfile
          - container: openSUSE
            dockerfile: ./dockerfiles/Dockerfile_opensuse
    needs: [bash-lint, yaml-lint, dockerfile-lint, markdown-spellcheck]
    steps:
      - name: Check the current OS version
        run: grep "VERSION\|ID" /etc/os-release && uname -a
      - uses: actions/checkout@v4
      - name: Run the docker image
        timeout-minutes: 120
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: false
