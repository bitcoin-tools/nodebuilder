#!/bin/sh
#
# A console output test script for nodebuilder
set -o errexit
set -o nounset

handle_exit() {
  kill_tail_process
}

handle_error() {
  handle_exit
  printf '%s\n' "Test failed."
}

kill_tail_process() {
  if kill -0 "${tail_pid}" > /dev/null 2>&1; then
    kill -INT "${tail_pid}"
  fi
}

[ -f output_stdout.txt ] || touch output_stdout.txt
tail -f output_stdout.txt &
tail_pid=$!

trap 'if [ $? -eq 0 ]; then handle_exit; else handle_error; fi' EXIT

nohup /bin/sh -c "$(curl -fsSL https://github.com/bitcoin-tools/nodebuilder/raw/master/nodebuilder)" \
  > output_stdout.txt \
  2> output_stderr.txt
rm nodebuilder
kill_tail_process

#printf '%s\n' "Printing the contents of stdout for debug purposes"
#cat output_stdout.txt

for message in \
  "Detected: running on (Linux|macOS).$" \
  "Checking for internet... ok.$" \
  "Checking for Bitcoin Core [1-9][0-9]*\.[0-9]+(\.[0-9]+)?... (not )?found.$" \
  "Installing Bitcoin Core... ok.$" \
  "Setting the default node behavior... ok.$" \
  "Checking data already synced... [0-9]+ GiB.$" \
  "Checking free space in home directory... [0-9]+ [GM]iB.$" \
  "Starting Bitcoin Core... ok.$" \
  "Checking the RPC status... ok.$" \
  "..........$" \
  "Syncing the block headers \((first|second) pass\).$" \
  "Sync progress:      [0-9]+\.[0-9]{3} %$" \
  "Blocks remaining:   [0-9]*$" \
  "Current chain tip:  (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [ 1-3][0-9] [0-9]{2}:[0-9]{2}:[0-9]{2} UTC 2[0-9]{3}$" \
  "Chain sync size:    [0-9]+ [GM]iB$" \
  "Disk free space:    [0-9]+ GiB$" \
  "The blockchain download is progressing. Exiting the script.$"; do
  if ! grep -Eq "${message}" output_stdout.txt > /dev/null 2>&1; then
    printf '%s\n' "FAILURE: Expected message ${message} not found."
    exit 1
  fi
done

if [ "$(uname -s)" != "Darwin" ]; then
  for message in \
    "Performing a system upgrade... ok.$" \
    "Checking for dependencies... ok.$" \
    "Creating application shortcuts... ok.$" \
    "Checking the memory on your system... [0-9]+\.[0-9] of [0-9]+\.[0-9] GiB free.$"; do
    if ! grep -Eq "${message}" output_stdout.txt > /dev/null 2>&1; then
      printf '%s\n' "FAILURE: Expected message ${message} not found."
      exit 1
    fi
  done
fi

for message in \
  "apt-utils" \
  "libzmq" \
  "BDB" \
  "Berkeley DB" \
  "Checking the memory on your system... 0 GiB of 0 GiB free." \
  "Checking the memory on your system... 0.0 GiB of 0.0 GiB free." \
  "Checking free space in home directory... 0 GiB." \
  "Sync progress:      [0-9]+\.[0-9]{4} %" \
  "Disk free space:    (0 G|[0-9]+ M)iB"; do
  if grep -Eq "${message}" output_stdout.txt > /dev/null 2>&1; then
    printf '%s\n' "FAILURE: Unexpected message ${message} found."
    exit 1
  fi
done

printf '%s\n' "PASS: All console output tests passed."
